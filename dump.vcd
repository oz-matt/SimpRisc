$date
	Wed Oct 14 08:54:34 2020
$end

$version
	Synopsys VCS version L-2016.06_Full64
$end

$timescale
	1ps
$end

$comment Csum: 1 f4ef945fc9b0fd51 $end


$scope module $unit $end
$upscope $end


$scope module top_tb $end

$scope module th $end
$var reg 1 ! clk $end
$var reg 1 " nreset $end

$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope module insgen_if_0 $end
$var reg 1 # clk $end
$var reg 1 $ nreset $end
$var reg 32 % instr_bus [31:0] $end
$var reg 32 & pc_out [31:0] $end
$var reg 32 ' adc_in [31:0] $end
$upscope $end


$scope module memw_if_0 $end
$var reg 1 ( clk $end
$var reg 1 ) nreset $end
$var reg 1 * mem_rw $end
$var reg 1 + memclk $end
$var reg 4 , mem_wstrobe [3:0] $end
$var reg 32 - out_data_bus [31:0] $end
$var reg 32 . out_addr_bus [31:0] $end
$var reg 32 / out_data_bus_port2 [31:0] $end
$var reg 32 0 out_addr_bus_port2 [31:0] $end
$var reg 32 1 in_data_bus [31:0] $end
$upscope $end


$scope module uut $end
$var reg 1 2 clk $end
$var reg 1 3 nreset $end
$var reg 32 4 instr_bus [31:0] $end
$var reg 32 5 in_data_bus [31:0] $end
$var reg 32 6 adc_in [31:0] $end
$var reg 1 7 mem_rw $end
$var reg 4 8 mem_wstrobe [3:0] $end
$var reg 1 9 memclk $end
$var reg 32 : pc_out [31:0] $end
$var reg 32 ; out_data_bus [31:0] $end
$var reg 32 < out_addr_bus [31:0] $end
$var reg 32 = out_data_bus_port2 [31:0] $end
$var reg 32 > out_addr_bus_port2 [31:0] $end

$scope module dut_top_inst $end
$var reg 1 ? clk $end
$var reg 1 @ nreset $end
$var reg 32 A instr_bus [31:0] $end
$var reg 32 B in_data_bus [31:0] $end
$var reg 32 C pc_out [31:0] $end
$var reg 1 D mem_rw $end
$var reg 4 E mem_wstrobe [3:0] $end
$var reg 1 F memclk $end
$var reg 32 G adc_in [31:0] $end
$var reg 32 H out_data_bus [31:0] $end
$var reg 32 I out_addr_bus [31:0] $end
$var reg 32 J out_data_bus_port2 [31:0] $end
$var reg 32 K out_addr_bus_port2 [31:0] $end

$scope module vif $end
$var reg 1 L clk $end
$var reg 1 M nreset $end
$var reg 32 N si_address [31:0] $end
$var reg 32 O si_data [31:0] $end
$var reg 32 P so_data [31:0] $end
$var reg 1 Q we $end
$var reg 1 R exec $end
$var reg 1 S fin $end

$scope task execute_write $end
$var reg 8 T addr [7:0] $end
$var reg 32 U data [31:0] $end
$upscope $end


$scope task execute_read $end
$var reg 8 V addr [7:0] $end
$upscope $end

$upscope $end


$scope module axi_master_wrapper_inst $end
$var integer 32 W pstate $end
$var reg 32 X adcdata [31:0] $end
$var integer 32 Y local_data $end
$var reg 1 Z ready_for_data $end
$var reg 1 [ ready_for_write_response $end
$var reg 1 \ valid_read_data_received $end
$var reg 1 ] valid_write_response_received $end
$var reg 1 ^ finread $end
$var reg 1 _ finwrite $end

$scope module vif $end
$var reg 1 ` AXI_ACLK $end
$var reg 1 a AXI_ARESETN $end
$var reg 32 b AXI_ARADDR [31:0] $end
$var reg 1 c AXI_ARVALID $end
$var reg 1 d AXI_ARREADY $end
$var reg 32 e AXI_RDATA [31:0] $end
$var reg 1 f AXI_RVALID $end
$var reg 1 g AXI_RREADY $end
$var reg 32 h AXI_AWADDR [31:0] $end
$var reg 1 i AXI_AWVALID $end
$var reg 1 j AXI_AWREADY $end
$var reg 32 k AXI_WDATA [31:0] $end
$var reg 1 l AXI_WVALID $end
$var reg 1 m AXI_WREADY $end
$var reg 1 n AXI_BVALID $end
$var reg 1 o AXI_BREADY $end
$var reg 3 p AXI_ARPROT [2:0] $end
$var reg 2 q AXI_RRESP [1:0] $end
$var reg 3 r AXI_AWPROT [2:0] $end
$var reg 4 s AXI_WSTRB [3:0] $end
$var reg 2 t AXI_BRESP [1:0] $end
$upscope $end


$scope module memslave_inst $end
$var reg 1 u valid_read_received $end
$var reg 1 v write_request_permitted $end
$upscope $end

$upscope $end


$scope module cpu_inst $end
$var wire 1 w clk $end
$var wire 1 x nreset $end
$var reg 32 y instr_bus [31:0] $end
$var reg 32 z in_data_bus [31:0] $end
$var reg 1 { mem_rw $end
$var reg 4 | mem_wstrobe [3:0] $end
$var reg 1 } memclk $end
$var reg 32 ~ pc_out [31:0] $end
$var reg 32 "! out_data_bus [31:0] $end
$var reg 32 "" out_addr_bus [31:0] $end
$var reg 32 "# out_data_bus_port2 [31:0] $end
$var reg 32 "$ out_addr_bus_port2 [31:0] $end
$var reg 32 "% pc [31:0] $end
$var reg 32 "& jump [31:0] $end
$var reg 1 "' take_branch $end
$var reg 1 "( rd_w_en $end
$var reg 1 ") on_branch_instrution $end
$var wire 1 "* on_branch_instruction $end
$var reg 32 "+ rdbuffer [31:0] $end
$var reg 32 ", gbuf [31:0] $end

$scope module mif $end
$var reg 1 "- nreset $end
$var reg 32 ". out_data_bus_port2 [31:0] $end
$var reg 32 "/ out_addr_bus_port2 [31:0] $end
$var reg 32 "0 mem_wdata [31:0] $end
$var reg 32 "1 mem_rdata [31:0] $end
$var reg 1 "2 mem_rw $end
$var reg 1 "3 clk $end
$var reg 1 "4 memclk $end
$var wire 32 "5 rx0 [31:0] $end
$var wire 32 "6 rx1 [31:0] $end
$var wire 32 "7 rx2 [31:0] $end
$var wire 32 "8 rx3 [31:0] $end
$var reg 32 "9 mem_addr [31:0] $end
$upscope $end


$scope module instruction $end
$var wire 7 ": opcode [6:0] $end
$var wire 5 "; rd [4:0] $end
$var wire 5 "< rs1 [4:0] $end
$var wire 5 "= rs2 [4:0] $end
$var wire 3 "> funct3 [2:0] $end
$var wire 12 "? i_imm [11:0] $end
$var wire 12 "@ s_imm [11:0] $end
$var wire 12 "A b_imm [11:0] $end
$var wire 20 "B u_imm [19:0] $end
$var wire 20 "C j_imm [19:0] $end
$var wire 1 "D aluc $end
$var wire 1 "E ebit $end
$var integer 32 "F name $end
$var reg 32 "G instruction [31:0] $end
$var wire 7 "H funct7 [6:0] $end
$var wire 3 "I c_ubits [2:0] $end
$var wire 2 "J c_lbits [1:0] $end
$var wire 1 "K c_12bit [0:0] $end
$var wire 2 "L c_umbits [1:0] $end
$var wire 2 "M c_lmbits [1:0] $end
$var reg 8 "N size [7:0] $end
$upscope $end


$scope module umem_inst $end
$var wire 3 "> insf3 [2:0] $end
$var reg 32 "O odb [31:0] $end
$var reg 32 "P odb2 [31:0] $end
$var reg 32 "Q fixed_addr1 [31:0] $end
$var reg 32 "R fixed_addr2 [31:0] $end
$var reg 32 "S fixed_addr3 [31:0] $end
$var reg 32 "T fixed_addr4 [31:0] $end
$upscope $end

$upscope $end


$scope module sindrv_inst $end
$var reg 32 "U adc_in [31:0] $end
$var reg 8 "V raddr [7:0] $end
$var reg 1 "W wstate $end
$var reg 1 "X loop_finished $end
$var wire 8 "Y rand_byte [7:0] $end
$var reg 8 "Z curr_addr [7:0] $end
$var reg 8 "[ target_addr [7:0] $end
$var reg 32 "\ curr_data [31:0] $end
$var reg 8 "] curr_data_loop_addr [7:0] $end

$scope module genblk1[0].lfsr_insta $end
$var reg 1 "^ clk $end
$var reg 1 "_ nreset $end
$var reg 5 "` data [4:0] $end
$var reg 5 "a data_next [4:0] $end
$upscope $end


$scope module genblk1[1].lfsr_insta $end
$var reg 1 "b clk $end
$var reg 1 "c nreset $end
$var reg 5 "d data [4:0] $end
$var reg 5 "e data_next [4:0] $end
$upscope $end

$upscope $end


$scope module aximem_inst $end
$var reg 32 "f axi_mem_data [31:0] $end
$var reg 32 "g axi_mem_addr [31:0] $end
$var reg 1 "h axi_mem_w $end
$upscope $end

$upscope $end

$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0!
0"
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '
b10000000000000000000000000000000 &
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
b00000000000000000000000000000000 1
b00000000000000000000000000000000 0
b00000000000000000000000000000000 /
b00000000000000000000000000000000 .
b00000000000000000000000000000000 -
b0000 ,
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 6
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx G
b00000000000000000000000000000000 B
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx A
b0000 E
b00000000000000000000000000000000 I
b00000000000000000000000000000000 K
b00000000000000000000000000000000 H
b00000000000000000000000000000000 J
b10000000000000000000000000000000 C
b00000000000000000000000000000000 5
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
b0000 8
b00000000000000000000000000000000 <
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 =
b10000000000000000000000000000000 :
b00000000000000000000000000000000 P
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx O
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx N
b00000000 V
b00000000 T
b00000000000000000000000000000000 U
0^
0_
0Z
0[
0\
0]
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 W
bxx t
bxxxx s
b00000000000000000000000000000000 k
bxxx r
b00000000000000000000000000000000 h
bxx q
b00000000000000000000000000000000 e
bxxx p
b00000000000000000000000000000000 b
0u
0v
0"*
0")
0"(
0"'
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ",
b00000000000000000000000000000000 z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y
b00000000000000000000000000000001 "&
b0000 |
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 "$
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 "#
b10000000000000000000000000000000 "%
b10000000000000000000000000000000 ~
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "+
b00000000000000000000000000000000 "1
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "0
b00000000000000000000000000000000 "/
b00000000000000000000000000000000 ".
b00000000000000000000000000000000 "9
b00000000000000000000000000101000 "F
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "G
b00000010 "N
b00000000000000000000000000000000 "O
b00000000000000000000000000000000 "P
b00000000000000000000000000000000 "Q
b00000000000000000000000000000001 "R
b00000000000000000000000000000010 "S
b00000000000000000000000000000011 "T
0"c
0"_
0"X
0"W
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "U
bxxxxxxxx "Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "\
bxxxxxxxx "]
b11111 "`
b00110 "a
b11111 "d
b00110 "e
b00000000 "V
b11111111 "Y
bxxxxxxxx "[
b00000000000000000000000000000000 "g
b00000000000000000000000000000000 "f
02
0?
0L
0"^
0"b
0`
03
0@
0M
0"3
0"4
0}
0F
09
0+
0"2
0{
0D
07
0*
0"D
0"E
x"K
0#
0$
0(
0)
0w
0x
xR
0S
xQ
0a
0d
0c
0j
0i
0o
0n
0g
0f
0m
0l
0"-
b00000000000000000000000000000000 "5
b00000000000000000000000000000000 "6
b00000000000000000000000000000000 "7
b00000000000000000000000000000000 "8
b000000000000 "A
bxx "J
bxx "M
bxxx "I
bxx "L
b000 ">
b0000000 "H
b000000000000 "?
b00000000000000000000 "C
b0000000 ":
b00000 ";
b00000 "<
b00000 "=
b000000000000 "@
b00000000000000000000 "B
0"h
$end
#10000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b00000000 "Z
b00000000 "[
b00000000 "]
1"X
b10001011100010001000010110000010 "\
#15000
1"
1$
1)
13
1@
1M
1x
1"-
1"c
1"_
1a
#20000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#30000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b00110 "`
b01101111 "Y
b00110 "d
b01100110 "Y
b10000000000000000000000000000100 "%
b10000000000000000000000000000100 ~
b10000000000000000000000000000100 C
b10000000000000000000000000000100 :
b10000000000000000000000000000100 &
b00000001 "V
1"W
1Q
b10100000000000000000000000000000 N
1R
1Z
1g
1[
1o
b10010 "a
b10010 "e
#40000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#50000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b10010 "`
b00100110 "Y
b10010 "d
b00100010 "Y
b10000000000000000000000000001000 "%
b10000000000000000000000000001000 ~
b10000000000000000000000000001000 C
b10000000000000000000000000001000 :
b10000000000000000000000000001000 &
b00000010 "V
b01100110 "Z
b01100110 "[
0"X
0R
b00000000000000000000000000000010 W
b00010 "a
b00010 "e
#60000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#70000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b00010 "`
b00010 "d
b10000000000000000000000000001100 "%
b10000000000000000000000000001100 ~
b10000000000000000000000000001100 C
b10000000000000000000000000001100 :
b10000000000000000000000000001100 &
b00000011 "V
1i
1l
b10111 "a
b10111 "e
b10100000000000000000000000000000 h
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx k
#80000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#90000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b10111 "`
b01110010 "Y
b10111 "d
b01110111 "Y
b10000000000000000000000000010000 "%
b10000000000000000000000000010000 ~
b10000000000000000000000000010000 C
b10000000000000000000000000010000 :
b10000000000000000000000000010000 &
b00000100 "V
1j
1m
b01100 "a
b01100 "e
1v
1"h
b10100000000000000000000000000000 "g
b10100000000000000000000000000000 "$
b10100000000000000000000000000000 K
b10100000000000000000000000000000 >
b10100000000000000000000000000000 0
b10100000000000000000000000000000 "/
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "f
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "P
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx "#
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx =
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ".
b10100000000000000000000000000011 "T
b10100000000000000000000000000010 "S
b10100000000000000000000000000001 "R
b10100000000000000000000000000000 "Q
#100000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#110000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b01100 "`
b11000111 "Y
b01100 "d
b11001100 "Y
b10000000000000000000000000010100 "%
b10000000000000000000000000010100 ~
b10000000000000000000000000010100 C
b10000000000000000000000000010100 :
b10000000000000000000000000010100 &
b00000101 "V
0i
0l
b00000000000000000000000000000100 W
0j
0m
1n
b01111 "a
b01111 "e
b00000000000000000000000000000000 h
0v
b00000000000000000000000000000000 k
1]
#120000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#130000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b01111 "`
b11111100 "Y
b01111 "d
b11111111 "Y
b10000000000000000000000000011000 "%
b10000000000000000000000000011000 ~
b10000000000000000000000000011000 C
b10000000000000000000000000011000 :
b10000000000000000000000000011000 &
b00000110 "V
0[
0o
1_
0n
b10011 "a
b10011 "e
0]
1S
#140000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#150000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b10011 "`
b00111111 "Y
b10011 "d
b00110011 "Y
b10000000000000000000000000011100 "%
b10000000000000000000000000011100 ~
b10000000000000000000000000011100 C
b10000000000000000000000000011100 :
b10000000000000000000000000011100 &
b00000111 "V
0"W
b00000000000000000000000000000000 W
1[
1o
0_
b01001 "a
b01001 "e
0S
#160000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#170000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b01001 "`
b10010011 "Y
b01001 "d
b10011001 "Y
b10000000000000000000000000100000 "%
b10000000000000000000000000100000 ~
b10000000000000000000000000100000 C
b10000000000000000000000000100000 :
b10000000000000000000000000100000 &
b00001000 "V
1"W
b10100000000000000000000001100110 N
1R
b00001 "a
b00001 "e
#180000
0!
0#
0(
02
0?
0L
0"^
0"b
0`
0w
0"3
0"4
0}
0F
09
0+
#190000
1!
1#
1(
12
1?
1L
1"^
1"b
1`
1w
1"3
1"4
1}
1F
19
1+
b00001 "`
b00011001 "Y
b00001 "d
b00010001 "Y
b10000000000000000000000000100100 "%
b10000000000000000000000000100100 ~
b10000000000000000000000000100100 C
b10000000000000000000000000100100 :
b10000000000000000000000000100100 &
b00001001 "V
b01101010 "Z
b00000100 "]
0R
b00000000000000000000000000000010 W
b01011 "a
b01011 "e
b10011000100101011001001010001111 "\
