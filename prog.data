//  x  | rs2 | rs1  | x|  rd  |
0000_0000_0000_0000_0010_0001_0000_0011  //LW umem[rx[0]] -> rx[2]
0000_0000_0001_0001_0000_0001_0001_0011  //ADDI rx[2] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
1111_1110_0010_0000_1000_1111_1110_0011  //BEQ jump to 0 if rx[1] == rx[2]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0100_0000_0000_0000_1110_1111  //JAL jump to pc+4, save pc+4 in rx[1]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
1111_1111_1011_0000_0000_0000_1110_0111  //JALR jump to imem[rx[0] + imm][31:1], save pc+ 4 in rx[1]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]
0000_0000_0001_0001_0000_0001_1001_0011  //ADDI rx[2] + 1 -> rx[3]
0000_0000_0001_0001_1000_0001_0001_0011  //ADDI rx[3] + 1 -> rx[2]


/*
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
0000_0000_0100_0000_0000_0001_0110_1111 //JAL
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0010_0000_1001_0001_0110_1111 //JAL
0000_0000_0010_0000_1001_0001_0110_1111 //JAL
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_0110_1111 //JAL
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
0000_0000_0010_0000_1001_0001_1011_0011  //SW. rx[rs2] -> umem[rx[3] + 0]
1111_1110_0010_0001_1000_1110_0010_0011  //LW. MEM[4] -> r1
0000_0000_0011_0000_1000_0001_0001_0011  //ADDI. imm#3 + r1 -> r2  
*/